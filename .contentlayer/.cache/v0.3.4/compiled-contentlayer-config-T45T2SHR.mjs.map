{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts", "../../../firebase.json"],
  "sourcesContent": ["import { defineDocumentType } from \"contentlayer/source-files\";\nimport { makeSource } from \"contentlayer/source-remote-files\";\nimport fs from \"fs\";\nimport GithubSlugger from \"github-slugger\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\nimport rehypeSlug from \"rehype-slug\";\nimport admin from \"firebase-admin\";\nimport serviceAccount from \"./firebase.json\";\n\nconst firebaseConfig = {\n  // @ts-ignore\n  credential: admin.credential.cert(serviceAccount),\n  storageBucket: \"home-assistance-20055.appspot.com\",\n};\n\nexport function downloadAllBlogs(fs: any, bucket: any) {\n  return new Promise((resolve, reject) => {\n    bucket\n      .getFiles()\n      .then(async (data: any) => {\n        const files = data[0];\n\n        const localDirectory = \"./blogs\";\n\n        console.log(files.length, \" blogs found in cloud storage!\");\n        const promises = files.map((file: any) => {\n          return new Promise((resolve, reject) => {\n            const destination = `${localDirectory}/${file.name}`;\n\n            file\n              .createReadStream()\n              .pipe(fs.createWriteStream(destination))\n              .on(\"finish\", () => {\n                resolve(true);\n                console.log(`Downloaded ${file.name} to ${destination}`);\n              })\n              .on(\"error\", (error: any) => {\n                reject(error);\n                console.error(`Error downloading ${file.name}:`, error);\n              });\n          });\n        });\n        await Promise.all(promises);\n        resolve(true);\n      })\n      .catch((error: any) => {\n        console.error(\"Error listing files:\", error);\n        reject(error);\n      });\n  });\n}\n\nif (!admin.apps.length) {\n  admin.initializeApp(firebaseConfig);\n}\nexport const storage = admin.storage();\nexport const bucket = storage.bucket();\n\nexport const Blog = defineDocumentType(() => ({\n  name: \"Blog\",\n  filePathPattern: `**/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: { type: \"string\", required: true },\n    description: { type: \"string\", required: true },\n    author: { type: \"string\", required: true },\n    readingTime: { type: \"string\", required: true },\n    image: { type: \"string\", required: true },\n    slug: { type: \"string\", required: true },\n    publishedDate: { type: \"date\", required: true },\n    tags: {\n      type: \"list\",\n      of: { type: \"string\" },\n      required: true,\n    },\n  },\n  computedFields: {\n    toc: {\n      type: \"json\",\n      resolve: async (blog: any) => {\n        const regXHeader = /\\n(?<flag>#{1,6})\\s+(?<content>.+)/g;\n        const slugger = new GithubSlugger();\n        const headings = Array.from(blog.body.raw.matchAll(regXHeader)).map(\n          ({ groups }: any) => {\n            const flag = groups?.flag;\n            const content = groups?.content;\n            return {\n              level:\n                flag?.length == 1 ? \"one\" : flag?.length == 2 ? \"two\" : \"three\",\n              text: content,\n              slug: content ? slugger.slug(content) : undefined,\n            };\n          }\n        );\n        return headings;\n      },\n    },\n  },\n}));\n\nconst syncContentFromGit = async (contentDir: string) => {\n  const syncRun = async () => {\n    await downloadAllBlogs(fs, bucket);\n  };\n\n  let wasCancelled = false;\n  let syncInterval: any;\n\n  const syncLoop = async () => {\n    console.log(\"Syncing content files from firebase cloud store\");\n\n    await syncRun();\n\n    if (wasCancelled) return;\n\n    syncInterval = setTimeout(syncLoop, 1000 * 60 * 60);\n  };\n\n  await syncLoop();\n\n  return () => {\n    wasCancelled = true;\n    clearTimeout(syncInterval);\n  };\n};\n\nexport default makeSource({\n  syncFiles: syncContentFromGit,\n  contentDirPath: \"blogs\",\n  documentTypes: [Blog],\n  disableImportAliasWarning: true,\n  mdx: {\n    rehypePlugins: [\n      rehypeSlug,\n      [rehypeAutolinkHeadings, { behavior: \"append\" }],\n    ],\n  },\n});\n", "{\n  \"type\": \"service_account\",\n  \"project_id\": \"home-assistance-20055\",\n  \"private_key_id\": \"9c15a9213d1c12686da6114837b83a94533fce90\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCkVQcJrYwLAIbz\\nws6fmvN/QaD8K2B6SHa87xmySVYYYaQkGMCgXGK4gwC3xbPqTy66EP4+pXF5yv8h\\nbu2hxhmRZzwg+gcpeydj1aMF0U28GCv8tyhHW0NaHVr2+BlfS6MfKhPC/CwYSqGE\\n3YpqrbuCke0RoC+mrPDD/+jNpfQe7ZmWs0IVN8T9DqW3INE7khoBRCdLIxqo7dmE\\nA+ZM6vVidS/Z1PoRaVj3uVrPFDGnKbVQa6i8qnLAbnPi05AQUEv+FnBLqDPYquWE\\nwig6yQjSugNLv7+1JEuP1dATbcU0zKWZHLAkECDqytAlw6DTWSeOcIHWrRHWw1de\\nZNW4CbY/AgMBAAECggEAIw2eFDLoQfqJTtrZj1MSqKz7pX6tNDhb155bCVw6WLYP\\nOMHs6Of8COas0waBg7QDQB5a1UseIwApntyWJOFoV8tBGLmsqG0EMHgEL7v/TGWN\\nkHkTRvFRMxo66p5ubxTnxUCI+Zkn4MCepoRJP8sySb5N5uoX8AJI0041vxQsuCHX\\n2SXDjgoIkqEcTLiHflHQNG/048j2UaBxcZLxPX4KgkjBesDKPTgkwsz3Q/2OJP7T\\nslySNxyf4U06F3jYsHTpwm1pL23Zy+M2wkAqNipZEm+IaUP9yNIquCg5AFdTKCPQ\\nUpRJGCPMzCzHiyYN/jy90k6gC2b5o+CRlDgjdq+CiQKBgQDcyggiGdV0Zju638l6\\nxd2sjBHj+CQL83w90iauoU3STgdS9p7p0qPVRH1eduiAUlZurseDPugLqleyQY/I\\neUMHYaDOutwf9wbqYyCXlUgMQYl4b24Y77kQT6s/iZodXdFH7qagXUyU1xdZu1mb\\nPGe1+MqyHd6/dUtqD0XheX8HaQKBgQC+ihKpBwLJEs42WyFild/Rk7O6ANcBjLGQ\\nOxdV7toui/DnCFNkICVfKuu9L3APX9mXF9yqqm+MPA7WkRGG8PbnimjNFpjVx311\\nOL4wLeBMiGN2lUur5vDbc64ziXtl/2qf1LvR7V5cyQoYWs0I+zMvQXTyeCvoPngq\\ndV8ukquDZwKBgAOXXa6AURKFny8Y+MQAd+yYkqnsnVl8ambvBiYNBaEIF+JnlIol\\nHPkZFhj1Qi7kJ/fA7AncehXGfYquulH+dvKlyeHS9EWo1Pn3Bs6wZO2eG0hUN6w8\\nKfxz70snR9R2dDMBVMCDA/3fycdx3rFBuEYjd9iR18+xbrqY6QAT49cRAoGAEnYy\\nZKpHPNBTprShwXmgHCBhk64tJvtI4R64nhzsiwIIL3qBCfyLYnM4MDZ+dx7kaF1p\\nhifJcx8GmQepWRfT9I9WpDiCSoRvxYHf+68WQpQcfwrsMBXKVJka0eeKS1G6NQ5Z\\nvHdxYzAfiEiUAUDFrth6yluWdYRIBGUm+c5ATBUCgYEA0alh2rTPHeioKq2cMjqE\\nwaXXVuVJ1YVWLiHIz01OUcoGhzCk6OYA0jZwa2NnnKpqUro+pRam8pL8g/1/A5io\\ntw6RlZOKQckdOeKFn/hXgOIcVeMEob9xRPkWP0wtTQRk4Gkq1z5PTjjklScUBxyC\\naPUKOzLrPs+emoANEJKXyHc=\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"firebase-adminsdk-pvwk4@home-assistance-20055.iam.gserviceaccount.com\",\n  \"client_id\": \"113506202539208239585\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-pvwk4%40home-assistance-20055.iam.gserviceaccount.com\",\n  \"universe_domain\": \"googleapis.com\"\n}\n"],
  "mappings": "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",
  "names": ["fs", "bucket", "resolve", "reject"]
}
